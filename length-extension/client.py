import json
import urllib.request
import urllib.parse
import urllib.error
import base64

import os

BASE_URL = "http://pac.bouillaguet.info/TP2/"
ENCODING = 'utf-8'

class ServerError(Exception):
    def __init__(self, code=None, msg=None):
        self.code = code
        self.msg = None

class Server:
    def __init__(self, base_url):
        self.base = base_url

    def query(self, url, parameters=None ):
         url = self.base + url
         try:
            request = urllib.request.Request(url)
            data = None
            if parameters is not None:
                data = json.dumps(parameters).encode()
                request.add_header('Content-type', 'application/json')
            with urllib.request.urlopen(request, data) as connexion:
                result = connexion.read().decode()
                if connexion.info()['Content-Type'] == "application/json":
                    result = json.loads(result)
            return result
         except urllib.error.HTTPError as e:
             raise ServerError(e.code, e.read().decode()) from None

if __name__ == "__main__":
  server = Server(BASE_URL)

  response = server.query('/length-extension/blurb-generator/sommerard')

  # ./hash_extender -ddata-format=hex -s '92e1afb92d63e418a65081674b6cede557a44b38466e0a99afeef90be47e88bd' -a '736f6d6d6572617264' --append-format=hex -f sha256 -l 32
  parameters = { 'tag': '328c983cbde44426d96441b1d9686029e1de3946e51a42415289dcfa533167d8', 'message': '4c6f727371756520746f7574206573742066696e69206c6f7273717565206c276f6e2061676f6e6973650a536e6f6220756e2070657520737572206c657320626f7264732064657320626f72647320666f6e64616d656e746175780a556e6520746f676520696c20706f727461697420717569206e27c3a97461697420706173206465206d6973650a446573206e6172636973736573206f6e20637565696c6c65206f75206269656e206f6e20657374206465732076656175780a447520766f6973696e206c65205061706f75207375c3a765206c2761706f70687973650a4fc3b92076656e6169656e7420706172206d696c6c69657273207327c3a963686f756572206c657320686172656e63656175780a4465206c61206d6f7274206f6e20766f75732067726566666520756e65206f7264652062c3a2746172646973650a4c6f72737175276f6e20766f79616974206175206c6f696e20666c616d626572206c65732061726272697373656175780a44752047616e6765206175204d616c61626172206c65206c6f726420616e676c616973207a6f7a6f7474650a436f6d6d6520c3a0204368616e6465726e61676f72206c65206d616e616e742073656e74206c612063726f7474650a4c6520636f6c6f6e656c207327c3a9706f6e676520756e20626c61736f6e2064616e73206c61206d61696e0a426172646520717565207475206d6520706c61697320746f756a6f75727320747520736f6c696c6f717565730a4f6e206d6574746169742073616e73206661c3a76f6e2073657320706c757320696e666563746573206c6f717565730a4c27c3a963752064652076616972206f752064276f72206e65206475726520717527756e206d6174696e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001600736f6d6d6572617264' }

  response = server.query('/length-extension/validate/sommerard', parameters)
  print(response)
